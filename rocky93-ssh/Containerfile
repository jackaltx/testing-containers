################################################################
# Notes:
#  The purpose is to establish a base OS configuration with a non-root
#  provisioning user. As the provisioning user does NOT have a password,
#  we need to create a user that will automatically sudo.
#  So honestly..I am conflicted.
#
FROM rockylinux:9.3

# Update and install required packages
RUN dnf -y update && \
    dnf -y install \
    python3 \
    python3-pip \
    sudo \
    systemd \
    openssh-server \
    iproute \
    pam \
    pam_sudoers \
    && dnf clean all \
    && rm -rf /var/cache/dnf

# Remove unnecessary packages and users for security
RUN for user in games news; do userdel -r $user 2>/dev/null || true; done

# Ensure sudo has correct permissions
RUN chown 0:0 /usr/bin/sudo && \
    chmod 4755 /usr/bin/sudo && \
    ls -l /usr/bin/sudo

# Mask unnecessary systemd services
RUN systemctl mask systemd-machine-id-commit.service

# Create provisioner user and set up sudo
RUN useradd -m -s /bin/bash jackaltx && \
    echo "jackaltx ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/jackaltx && \
    chmod 440 /etc/sudoers.d/jackaltx

# But we might need to explicitly configure PAM for the container environment
# this is a Rocky on github thing. It cannot use the default user to authenticate.
# Add PAM configuration for sudo
RUN echo "auth       sufficient     pam_unix.so" > /etc/pam.d/sudo && \
    echo "auth       sufficient     pam_rootok.so" >> /etc/pam.d/sudo && \
    echo "account    required      pam_unix.so" >> /etc/pam.d/sudo && \
    echo "session    required      pam_unix.so" >> /etc/pam.d/sudo

# Create ansible temp directory with proper permissions
RUN mkdir -p /tmp/ansible-jackaltx && \
    chown jackaltx:jackaltx /tmp/ansible-jackaltx && \
    chmod 700 /tmp/ansible-jackaltx

# Set up SSH
RUN mkdir -p /home/jackaltx/.ssh && \
    chmod 700 /home/jackaltx/.ssh && \
    mkdir -p /run/sshd

# SSH key will be added during build
ARG SSH_KEY
RUN echo "$SSH_KEY" > /home/jackaltx/.ssh/authorized_keys && \
    chmod 600 /home/jackaltx/.ssh/authorized_keys && \
    chown -R jackaltx:jackaltx /home/jackaltx/.ssh

# Configure SELinux for SSH (if enabled)
RUN if command -v semanage >/dev/null 2>&1; then \
    semanage fcontext -a -t ssh_home_t "/home/jackaltx/.ssh(/.*)?" && \
    restorecon -R -v /home/jackaltx/.ssh \
    ; fi

# Generate SSH host keys and configure SSH
RUN ssh-keygen -A && \
    chmod 600 /etc/ssh/ssh_host_* && \
    systemctl enable sshd

# Add to Containerfiles - Enhanced SSH Security
RUN sed -i 's/#MaxAuthTries.*/MaxAuthTries 3/' /etc/ssh/sshd_config && \
    sed -i 's/#LoginGraceTime.*/LoginGraceTime 60/' /etc/ssh/sshd_config && \
    sed -i 's/#AllowAgentForwarding.*/AllowAgentForwarding no/' /etc/ssh/sshd_config && \
    echo "AllowUsers jackaltx" >> /etc/ssh/sshd_config

# Add to Containerfiles - Enhanced Sudo Configuration
RUN echo "Defaults timestamp_timeout=15" >> /etc/sudoers.d/timeout && \
    echo "Defaults logfile=/var/log/sudo.log" >> /etc/sudoers.d/logging && \
    echo "Defaults use_pty" >> /etc/sudoers.d/pty && \
    echo "Defaults secure_path=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"" >> /etc/sudoers.d/secure_path

# Add to Containerfiles - Secure Important Directories
RUN chmod 700 /etc/sudoers.d && \
    chmod 440 /etc/sudoers.d/* && \
    find /etc/ssh -type f -name 'ssh_host_*_key' -exec chmod 600 {} \; && \
    find /etc/ssh -type f -name 'ssh_host_*_key.pub' -exec chmod 644 {} \;

# Add to Containerfiles - System Security Settings
RUN echo "umask 027" >> /etc/profile && \
    echo "TMOUT=900" >> /etc/profile && \
    echo "readonly TMOUT" >> /etc/profile

# Verify permissions
RUN ls -l /usr/bin/sudo && \
    ls -l /etc/sudoers.d/jackaltx && \
    id jackaltx && \
    grep -r "jackaltx" /etc/sudoers.d/
